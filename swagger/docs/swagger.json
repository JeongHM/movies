{
  "openapi": "3.0.0",
  "info": {
    "title": "movies",
    "version": "0.0.1",
    "description": "movies project"
  },
  "servers": [
    {
      "url": "{protocol}://{domain}:{port}/api/{version}",
      "variables": {
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http"
        },
        "domain": {
          "enum": [
            "127.0.0.1"
          ],
          "default": "127.0.0.1"
        },
        "port": {
          "enum": [
            "5050"
          ],
          "default": "5050"
        },
        "version": {
          "enum": [
            "v1"
          ],
          "default": "v1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "movies",
      "description": "movies"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetMoives"
          },
          "204": {
            "$ref": "#/components/responses/Empty"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "movies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/movie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostMovie"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      },
      "put": {
        "tags": [
          "movies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "movies": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/movie"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "$ref": "#/components/responses/Empty"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAccept"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "$ref": "#/components/responses/Empty"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/movies/{movie_id}": {
      "get": {
        "tags": [
          "movies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/movie_id"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Empty"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/NotAllow"
          },
          "406": {
            "$ref": "#/components/responses/NotAccept"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "movie": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "신세계"
          },
          "genre": {
            "type": "string",
            "example": "action"
          },
          "grade": {
            "type": "integer",
            "example": 19
          },
          "release_at": {
            "type": "string",
            "format": "date",
            "example": "2013-08-01"
          },
          "views": {
            "type": "integer",
            "example": 4689161
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not Found"
          },
          "result": {
            "type": "object",
            "example": {}
          },
          "errors": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "user_message": {
                    "type": "string",
                    "example": "404 Not Found"
                  },
                  "internal_message": {
                    "type": "string",
                    "example": "The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again."
                  }
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Conflict"
          },
          "result": {
            "type": "object",
            "example": {}
          },
          "errors": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "user_message": {
                    "type": "string",
                    "example": "UNIQUE constraint failed"
                  },
                  "internal_message": {
                    "type": "string",
                    "example": "movies.name"
                  }
                }
              }
            }
          }
        }
      },
      "NotAllow": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not Allow"
          },
          "result": {
            "type": "object",
            "example": {}
          },
          "errors": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "user_message": {
                    "type": "string",
                    "example": "405 Method Not Allowed"
                  },
                  "internal_message": {
                    "type": "string",
                    "example": "The method is not allowed for the requested URL."
                  }
                }
              }
            }
          }
        }
      },
      "NotAccpet": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not Accept"
          },
          "result": {
            "type": "object",
            "example": {}
          },
          "errors": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "user_message": {
                    "type": "string",
                    "example": "406 Not Acceptable"
                  },
                  "internal_message": {
                    "type": "string",
                    "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
                  }
                }
              }
            }
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "user_message": {
            "type": "string"
          },
          "internal_message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "movie_id": {
        "in": "path",
        "name": "movie_id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "responses": {
      "GetMoives": {
        "description": "success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "success"
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "movies": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/movie"
                      }
                    }
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "PostMovie": {
        "description": "success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "success"
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string",
                          "example": "self"
                        },
                        "href": {
                          "type": "string",
                          "example": "http://127.0.0.1:5050/api/v1/movies/8"
                        }
                      }
                    }
                  }
                },
                "error": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotFound"
            }
          }
        }
      },
      "Conflict": {
        "description": "The specified resource was exist",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Conflict"
            }
          }
        }
      },
      "NotAllow": {
        "description": "The method is not allowed for the requested URL.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotAllow"
            }
          }
        }
      },
      "NotAccept": {
        "description": "The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation..",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotAccpet"
            }
          }
        }
      },
      "Empty": {
        "description": "The resource is Empty"
      }
    }
  }
}